/**
 * @param {(Record<string, any> | undefined)[]} propsLevels
 * @returns {Record<string, any> & {class: string[]}}
 */
export function mergePropsLevels(propsLevels: (Record<string, any> | undefined)[]): Record<string, any> & {
    class: string[];
};
/**
 * @param {import('../types.js').VjsfNode} node
 * @param {import('../types.js').VjsfStatefulLayout} statefulLayout
 * @param {(string | [string, string])[]} [layoutPropsMap]
 * @param {boolean} [isMainComp]
 * @returns {Record<string, any>}
 */
export function getInputProps(node: import('../types.js').VjsfNode, statefulLayout: import('../types.js').VjsfStatefulLayout, layoutPropsMap?: (string | [string, string])[] | undefined, isMainComp?: boolean | undefined): Record<string, any>;
/**
 * @param {import('@json-layout/core').StateNode} node
 * @param {boolean} isMainComp
 * @returns {Record<string, any>}
 */
export function getCompProps(node: import('@json-layout/core').StateNode, isMainComp?: boolean): Record<string, any>;
/**
 * shared between select and autocomplete components
 * @param {import('../types.js').VjsfNode} node
 * @param {import('../types.js').VjsfStatefulLayout} statefulLayout
 * @returns {Record<string, any>}
 */
export function getSelectProps(node: import('../types.js').VjsfNode, statefulLayout: import('../types.js').VjsfStatefulLayout): Record<string, any>;
//# sourceMappingURL=props.d.ts.map