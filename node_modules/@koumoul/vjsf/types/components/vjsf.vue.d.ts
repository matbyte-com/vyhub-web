declare const _default: import("vue").DefineComponent<any, {
    $emit: ((event: "update:modelValue", data: any) => void) & ((event: "update:state", state: import("../types.js").VjsfStatefulLayout) => void);
    modelValue: any;
    options: Partial<Omit<import("../types.js").VjsfOptions, "width" | "vjsfSlots" | "onData" | "onUpdate" | "onAutofocus">> | null;
    schema: Record<string, any>;
    precompiledLayout: import("../../../node_modules/@json-layout/core/types/compile/types.js").CompiledLayout;
    $props: {
        readonly modelValue?: any;
        readonly options?: Partial<Omit<import("../types.js").VjsfOptions, "width" | "vjsfSlots" | "onData" | "onUpdate" | "onAutofocus">> | null | undefined;
        readonly schema?: Record<string, any> | undefined;
        readonly precompiledLayout?: import("../../../node_modules/@json-layout/core/types/compile/types.js").CompiledLayout | undefined;
    };
}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<any> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default _default;
//# sourceMappingURL=vjsf.vue.d.ts.map