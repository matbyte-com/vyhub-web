/**
 * @param {import('./types.js').CreateStateTreeContext} context
 * @param {import('./types.js').StatefulLayoutOptions} options
 * @param {import('../index.js').CompiledLayout} compiledLayout
 * @param {import('../index.js').SkeletonTree} skeleton
 * @param {import('./utils/display.js').Display} display
 * @param {unknown} data
 * @param {import('./types.js').ValidationState} validationState
 * @param {import('./types.js').StateTree} [reusedStateTree]
 * @returns {import('./types.js').StateTree}
 */
export function createStateTree(context: import('./types.js').CreateStateTreeContext, options: import('./types.js').StatefulLayoutOptions, compiledLayout: import('../index.js').CompiledLayout, skeleton: import('../index.js').SkeletonTree, display: import('./utils/display.js').Display, data: unknown, validationState: import('./types.js').ValidationState, reusedStateTree?: import("./types.js").StateTree | undefined): import('./types.js').StateTree;
//# sourceMappingURL=state-tree.d.ts.map