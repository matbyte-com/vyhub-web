/**
 * @param {object} _schema
 * @param {PartialCompileOptions} [partialOptions]
 * @returns {CompiledLayout}
 */
export function compile(_schema: object, partialOptions?: import("./types.js").PartialCompileOptions | undefined): CompiledLayout;
export { resolveLocaleRefs } from "./utils/resolve-refs.js";
/** @type {(draft: PartialCompileOptions, newOptions: PartialCompileOptions) => PartialCompileOptions} */
export const produceCompileOptions: (draft: PartialCompileOptions, newOptions: PartialCompileOptions) => PartialCompileOptions;
export type SkeletonTree = import('./types.js').SkeletonTree;
export type SkeletonNode = import('./types.js').SkeletonNode;
export type CompiledLayout = import('./types.js').CompiledLayout;
export type CompileOptions = import('./types.js').CompileOptions;
export type PartialCompileOptions = import('./types.js').PartialCompileOptions;
export type CompiledExpression = import('./types.js').CompiledExpression;
//# sourceMappingURL=index.d.ts.map