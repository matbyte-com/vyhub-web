{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///./node_modules/core-js/modules/es.object.entries.js","webpack:///./src/forms/Common.ts","webpack:///./node_modules/country-list/country-list.js","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts","webpack:///./node_modules/country-flag-icons/modules/unicode.js"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","baseMixins","isActive","expansionPanel","beforeDestroy","render","h","showLazyContent","staticClass","directives","class","$","$entries","entries","target","stat","O","API_URL","backend_url","countryOptions","Object","getCodeList","map","c","const","toUpperCase","title","userSelectField","type","t","serverbundleSelectField","serverTypeSelectField","form","default","readOnly","colorPicker","description","format","showSwatches","hideCanvas","hideSliders","hideInputs","hideModeSwitch","packetCategorySelectField","packetSelectField","packetsSelectField","items","rewardsSelectField","iconPicker","countryCodeField","oneOf","imageURLField","pattern","apiURL","data","nameMap","codeMap","mapCodeAndName","country","toLowerCase","code","forEach","exports","overwrite","countries","foundIndex","findIndex","getCode","getName","getNames","getCodes","getNameList","getData","ripple","disableIconRotate","expandIcon","hideActions","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","$createElement","setBackgroundColor","attrs","tabindex","on","click","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","e","toggle","isBooted","String","getCountryFlag","getRegionalIndicatorSymbol","letter","fromCodePoint","charCodeAt"],"mappings":"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","file":"js/chunk-0c728086.ba279c27.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.es/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","import i18n from '@/plugins/i18n';\n\nimport countries from 'country-list';\nimport countryUnicodeFlags from 'country-flag-icons/unicode';\nimport config from '@/config';\n\nconst API_URL = config.backend_url;\n\nconst countryOptions = Object.entries(countries.getCodeList())\n  .map((c) => ({\n    const: c[0].toUpperCase(),\n    title: `${countryUnicodeFlags(c[0])} ${c[1]}`,\n  }));\n\nexport default {\n  userSelectField: {\n    type: 'object',\n    title: i18n.t('user'),\n    'x-fromUrl': `${API_URL}/user/?query={q}&max=10`,\n    'x-itemKey': 'id',\n    'x-itemTitle': 'username',\n    'x-itemIcon': 'avatar',\n  },\n  serverbundleSelectField: {\n    type: 'object',\n    title: i18n.t('serverbundle'),\n    'x-fromUrl': `${API_URL}/server/bundle/`,\n    'x-itemKey': 'id',\n    'x-itemTitle': 'name',\n  },\n  serverTypeSelectField(disabled = false) {\n    const form = {\n      type: 'string',\n      title: i18n.t('type'),\n      default: 'GMOD',\n      readOnly: disabled,\n      'x-fromUrl': `${API_URL}/server/type/`,\n    };\n    return form;\n  },\n  colorPicker(title = 'color', description?: string) {\n    const form = {\n      type: 'string',\n      title: i18n.t(title),\n      format: 'hexcolor',\n      default: '#000000',\n      description: (description != null ? i18n.t(description) : null),\n      'x-props': {\n        showSwatches: true,\n        hideCanvas: true,\n        hideSliders: true,\n        hideInputs: true,\n        hideModeSwitch: true,\n      },\n    };\n    return form;\n  },\n  packetCategorySelectField: {\n    type: 'object',\n    title: i18n.t('category'),\n    'x-fromUrl': `${API_URL}/packet/category/`,\n    'x-itemKey': 'id',\n    'x-itemTitle': 'name',\n  },\n  packetSelectField: {\n    type: 'object',\n    title: i18n.t('packet'),\n    'x-fromUrl': `${API_URL}/packet/`,\n    'x-itemKey': 'id',\n    'x-itemTitle': 'title',\n  },\n  packetsSelectField: {\n    type: 'array',\n    title: i18n.t('packets'),\n    'x-fromUrl': `${API_URL}/packet/`,\n    'x-itemKey': 'id',\n    'x-itemTitle': 'title',\n    items: {\n      type: 'object',\n    },\n  },\n  rewardsSelectField: {\n    type: 'array',\n    title: i18n.t('rewards'),\n    items: {\n      type: 'object',\n    },\n    'x-fromUrl': `${API_URL}/packet/reward?query={q}`,\n    'x-itemKey': 'id',\n    'x-itemTitle': 'name',\n  },\n  iconPicker: {\n    title: i18n.t('icon'),\n    type: 'string',\n    'x-slots': {\n      'append-outer': `<a href=\"https://materialdesignicons.com/\" style=\"white-space: nowrap;\" target=\"_blank\">${i18n.t('forms.iconDescription')}</a>`,\n    },\n    'x-display': 'icon',\n    'x-fromUrl': `${API_URL}/design/icons?query={q}`,\n  },\n  countryCodeField: {\n    type: 'string',\n    title: i18n.t('country'),\n    oneOf: countryOptions,\n  },\n  imageURLField: {\n    type: 'string',\n    title: i18n.t('imageURL'),\n    pattern: '^https://.+$',\n  },\n  apiURL: API_URL,\n};\n","'use strict'\n\nvar data = require('./data.json')\n\n/** Precompute name and code lookups. */\nvar nameMap = {}\nvar codeMap = {}\ndata.forEach(mapCodeAndName)\n\nfunction mapCodeAndName (country) {\n  nameMap[country.name.toLowerCase()] = country.code\n  codeMap[country.code.toLowerCase()] = country.name\n}\n\nexports.overwrite = function overwrite (countries) {\n  if (!countries || !countries.length) return\n  countries.forEach(function (country) {\n    var foundIndex = data.findIndex(function (item) {\n      return item.code === country.code\n    })\n    data[foundIndex] = country\n    mapCodeAndName(country)\n  })\n}\n\nexports.getCode = function getCode (name) {\n  return nameMap[name.toLowerCase()]\n}\n\nexports.getName = function getName (code) {\n  return codeMap[code.toLowerCase()]\n}\n\nexports.getNames = function getNames () {\n  return data.map(function (country) {\n    return country.name\n  })\n}\n\nexports.getCodes = function getCodes () {\n  return data.map(function (country) {\n    return country.code\n  })\n}\n\nexports.getCodeList = function getCodeList () {\n  return codeMap\n}\n\nexports.getNameList = function getNameList () {\n  return nameMap\n}\n\nexports.getData = function getData () {\n  return data\n}\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","/**\r\n * Creates Unicode flag from a two-letter ISO country code.\r\n * https://stackoverflow.com/questions/24050671/how-to-put-japan-flag-character-in-a-string\r\n * @param  {string} country — A two-letter ISO country code (case-insensitive).\r\n * @return {string}\r\n */\nexport default function getCountryFlag(country) {\n  return getRegionalIndicatorSymbol(country[0]) + getRegionalIndicatorSymbol(country[1]);\n}\n/**\r\n * Converts a letter to a Regional Indicator Symbol.\r\n * @param  {string} letter\r\n * @return {string}\r\n */\n\nfunction getRegionalIndicatorSymbol(letter) {\n  return String.fromCodePoint(0x1F1E6 - 65 + letter.toUpperCase().charCodeAt(0));\n}\n//# sourceMappingURL=unicode.js.map"],"sourceRoot":""}